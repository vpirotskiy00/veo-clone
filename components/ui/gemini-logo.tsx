'use client';

import * as React from 'react';

import { cn } from '@/lib/utils';

interface GeminiLogoProps extends React.HTMLAttributes<HTMLDivElement> {
  size?: number;
  animated?: boolean;
}

const GeminiLogo = React.forwardRef<HTMLDivElement, GeminiLogoProps>(
  ({ className, size = 32, animated = true, ...props }, ref) => {
    return (
      <div
        className={cn(
          'inline-flex items-center justify-center',
          animated && 'hover:scale-110 transition-transform duration-300',
          className
        )}
        ref={ref}
        {...props}
      >
        <svg
          className={
            animated ? 'hover:rotate-12 transition-transform duration-500' : ''
          }
          height={size}
          preserveAspectRatio='xMidYMid meet'
          style={{
            width: '100%',
            height: '100%',
            transform: 'translate3d(0px, 0px, 0px)',
          }}
          viewBox='0 0 32 32'
          width={size}
          xmlns='http://www.w3.org/2000/svg'
        >
          <defs>
            <clipPath id={`gemini-clip-${size}`}>
              <rect height='32' width='32' x='0' y='0' />
            </clipPath>
            <linearGradient
              gradientUnits='userSpaceOnUse'
              id={`gemini-gradient-${size}`}
              spreadMethod='pad'
              x1='-33'
              x2='31'
              y1='26'
              y2='-28'
            >
              <stop offset='0%' stopColor='rgb(52,107,241)' />
              <stop offset='22%' stopColor='rgb(50,121,248)' />
              <stop offset='45%' stopColor='rgb(49,134,255)' />
              <stop offset='72%' stopColor='rgb(64,147,255)' />
              <stop offset='99%' stopColor='rgb(79,160,255)' />
            </linearGradient>
            <linearGradient
              gradientUnits='userSpaceOnUse'
              id={`gemini-gradient-2-${size}`}
              spreadMethod='pad'
              x1='-33'
              x2='31'
              y1='26'
              y2='-28'
            >
              <stop offset='0%' stopColor='rgb(52,107,241)' />
              <stop offset='22%' stopColor='rgb(50,121,248)' />
              <stop offset='45%' stopColor='rgb(49,134,255)' />
              <stop offset='72%' stopColor='rgb(64,147,255)' />
              <stop offset='99%' stopColor='rgb(79,160,255)' />
            </linearGradient>
            <g id={`gemini-main-${size}`}>
              <g
                opacity='1'
                style={{ display: 'block' }}
                transform='matrix(0.12479999661445618,0,0,0.12479999661445618,4.986400604248047,4.986400604248047)'
              >
                <g opacity='1' transform='matrix(1,0,0,1,88.25,88.25)'>
                  <path
                    d=' M-3.9000000953674316,-84.94999694824219 C-5.28000020980835,-79.47000122070312 -7.079999923706055,-74.13999938964844 -9.319999694824219,-68.93000030517578 C-15.15999984741211,-55.369998931884766 -23.15999984741211,-43.5 -33.33000183105469,-33.33000183105469 C-43.5,-23.170000076293945 -55.369998931884766,-15.15999984741211 -68.93000030517578,-9.319999694824219 C-74.12999725341797,-7.079999923706055 -79.47000122070312,-5.28000020980835 -84.94999694824219,-3.9000000953674316 C-86.73999786376953,-3.450000047683716 -88,-1.850000023841858 -88,0 C-88,1.850000023841858 -86.73999786376953,3.450000047683716 -84.94999694824219,3.9000000953674316 C-79.47000122070312,5.28000020980835 -74.13999938964844,7.079999923706055 -68.93000030517578,9.319999694824219 C-55.369998931884766,15.15999984741211 -43.5099983215332,23.15999984741211 -33.33000183105469,33.33000183105469 C-23.15999984741211,43.5 -15.149999618530273,55.369998931884766 -9.319999694824219,68.93000030517578 C-7.079999923706055,74.12999725341797 -5.28000020980835,79.47000122070312 -3.9000000953674316,84.94999694824219 C-3.450000047683716,86.73999786376953 -1.840000033378601,88 0,88 C1.850000023841858,88 3.450000047683716,86.73999786376953 3.9000000953674316,84.94999694824219 C5.28000020980835,79.47000122070312 7.079999923706055,74.13999938964844 9.319999694824219,68.93000030517578 C15.15999984741211,55.369998931884766 23.15999984741211,43.5099983215332 33.33000183105469,33.33000183105469 C43.5,23.15999984741211 55.369998931884766,15.149999618530273 68.93000030517578,9.319999694824219 C74.12999725341797,7.079999923706055 79.47000122070312,5.28000020980835 84.94999694824219,3.9000000953674316 C86.73999786376953,3.450000047683716 88,1.840000033378601 88,0 C88,-1.850000023841858 86.73999786376953,-3.450000047683716 84.94999694824219,-3.9000000953674316 C79.47000122070312,-5.28000020980835 74.13999938964844,-7.079999923706055 68.93000030517578,-9.319999694824219 C55.369998931884766,-15.15999984741211 43.5099983215332,-23.15999984741211 33.33000183105469,-33.33000183105469 C23.15999984741211,-43.5 15.149999618530273,-55.369998931884766 9.319999694824219,-68.93000030517578 C7.079999923706055,-74.12999725341797 5.28000020980835,-79.47000122070312 3.9000000953674316,-84.94999694824219 C3.450000047683716,-86.73999786376953 1.850000023841858,-88 0,-88 C-1.850000023841858,-88 -3.450000047683716,-86.73999786376953 -3.9000000953674316,-84.94999694824219z'
                    fill={`url(#gemini-gradient-${size})`}
                    fillOpacity='1'
                  />
                </g>
              </g>
            </g>
            <mask id={`gemini-mask-${size}`}>
              <use xlinkHref={`#gemini-main-${size}`} />
            </mask>
          </defs>
          <g clipPath={`url(#gemini-clip-${size})`}>
            <g mask={`url(#gemini-mask-${size})`} style={{ display: 'block' }}>
              <g
                opacity='1'
                transform='matrix(0.12479999661445618,0,0,0.12479999661445618,4.986400604248047,4.986400604248047)'
              >
                <g opacity='1' transform='matrix(1,0,0,1,88.25,88.25)'>
                  <path
                    d=' M-14.654000282287598,174.77099609375 C-14.654000282287598,174.77099609375 174.77099609375,14.654000282287598 174.77099609375,14.654000282287598 C174.77099609375,14.654000282287598 14.654000282287598,-174.77099609375 14.654000282287598,-174.77099609375 C14.654000282287598,-174.77099609375 -174.77099609375,-14.654000282287598 -174.77099609375,-14.654000282287598 C-174.77099609375,-14.654000282287598 -14.654000282287598,174.77099609375 -14.654000282287598,174.77099609375z'
                    fill={`url(#gemini-gradient-2-${size})`}
                    fillOpacity='1'
                  />
                </g>
              </g>
            </g>
          </g>
        </svg>
      </div>
    );
  }
);
GeminiLogo.displayName = 'GeminiLogo';

export { GeminiLogo };
